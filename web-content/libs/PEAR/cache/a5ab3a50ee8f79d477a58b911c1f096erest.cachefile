a:14:{s:7:"attribs";a:4:{s:5:"xmlns";s:36:"http://pear.php.net/dtd/rest.release";s:9:"xmlns:xsi";s:41:"http://www.w3.org/2001/XMLSchema-instance";s:11:"xmlns:xlink";s:28:"http://www.w3.org/1999/xlink";s:18:"xsi:schemaLocation";s:81:"http://pear.php.net/dtd/rest.release     http://pear.php.net/dtd/rest.release.xsd";}s:1:"p";a:2:{s:7:"attribs";a:1:{s:10:"xlink:href";s:12:"/rest/p/auth";}s:8:"_content";s:4:"Auth";}s:1:"c";s:12:"pear.php.net";s:1:"v";s:7:"1.3.0r3";s:2:"st";s:4:"beta";s:1:"l";s:11:"PHP License";s:1:"m";s:4:"yavo";s:1:"s";s:34:"Creating an authentication system.";s:1:"d";s:455:"The PEAR::Auth package provides methods for creating an authentication
system using PHP.

Currently it supports the following storage containers to read/write
the login data:

* All databases supported by the PEAR database layer
* All databases supported by the MDB database layer
* All databases supported by the MDB2 database layer
* Plaintext files
* LDAP servers
* POP3 servers
* IMAP servers
* vpopmail accounts
* RADIUS
* SAMBA password files
* SOAP";s:2:"da";s:19:"2004-09-20 08:02:47";s:1:"n";s:1310:"* Moved login screen generation code to Auth/Frontend/Html.php 
  In the future the frontend will be configurable.
* Implemented support for Challenge / Responce password authenthication
  have to enable advanced security $auth->setAdvancedSecurity
  will work only with DB container and cryptType = none|md5
* Implemented setAllowLogin to control which pages are allowed to perform login, 
  to preservce BC. Previusly the showLogin flag was used to control this - yavo
* Implmented lazy loading for the storage constructor, constructor is only created when needed
  to make Auth more lightweight (this might be adding a bit more overhead to login and usermanagement functions)
* Removed include of PEAR, was not used anywhare in Auth.php
* Created a new storage container DBLite same as DB but with the user manipulation functions removed (50% smaller)
* Added a new method staticCheckAuth which can be called statically with only the auth options
* Auth::importGlobalVariable method was removed and replaced by references to global variables
* Removed all calls to $session[$this->_sessionName], made local reference session point to that instead
* Changed call_user_func to call_user_func_array for the callbacks, to avoid using @ for passing variables by reference
* Code Cleanup, removed most vi comments";s:1:"f";s:5:"34636";s:1:"g";s:36:"http://pear.php.net/get/Auth-1.3.0r3";s:1:"x";a:1:{s:7:"attribs";a:1:{s:10:"xlink:href";s:19:"package.1.3.0r3.xml";}}}