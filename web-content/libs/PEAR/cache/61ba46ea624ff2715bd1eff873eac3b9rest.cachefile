a:14:{s:7:"attribs";a:4:{s:5:"xmlns";s:36:"http://pear.php.net/dtd/rest.release";s:9:"xmlns:xsi";s:41:"http://www.w3.org/2001/XMLSchema-instance";s:11:"xmlns:xlink";s:28:"http://www.w3.org/1999/xlink";s:18:"xsi:schemaLocation";s:81:"http://pear.php.net/dtd/rest.release     http://pear.php.net/dtd/rest.release.xsd";}s:1:"p";a:2:{s:7:"attribs";a:1:{s:10:"xlink:href";s:22:"/rest/p/html_quickform";}s:8:"_content";s:14:"HTML_QuickForm";}s:1:"c";s:12:"pear.php.net";s:1:"v";s:3:"2.0";s:2:"st";s:6:"stable";s:1:"l";s:11:"PHP License";s:1:"m";s:7:"mansion";s:1:"s";s:98:"The PEAR::HTML_QuickForm package provides methods for creating, validating, processing HTML forms.";s:1:"d";s:750:"The PEAR::HTML_QuickForm package provides methods for creating, validating, processing HTML forms.
    Features:
     * Creates xHTML compliant form elements of various type.
     * Allows you to choose an unlimited number of html attributes.
     * Allows you to create your own custom elements using your own classes.
     * Process form values (you should override the process method).
     * Creates javascript validation code using regular expression.
     * Server-side validation too.
     * Allows you to create your own validation rules.
     * Manages file uploads.
     * Allows you to freeze some elements in your form.
     * Allows you to customize the look of your form in many ways.
     * Template-like form elements customization...";s:2:"da";s:19:"2002-05-15 08:29:00";s:1:"n";s:1980:"New API for new version 2.0 !
      Here is a list of what's new in this version:
		* Moved all the elements from HTML/QuickForm/Elements/ to HTML/QuickForm/
		* Added $_elementIndex to keep track of the elements
		* Changed $_elementValues to $_defaultValues
		* Removed $_hidden and $_frozen
		* Added Filter support
		* Added templates for the _wrap functions
		* Changed loadDefault() to setDefaults()
		* Moved most of the logic to the element classes
		* Created an abstraction between the form class and the elements
		* Added getElement() and getElementValue()
		* Added toArray()
		* Cleaned up a lot of the code
		* Added the // {{{ markers to all files to make it for easier reading in vim
		* Added the error handlers and codes to make errors more descriptive
		* Added new method setConstants() which is like setDefaults() except that it overrides the POST or GET variables.
		* Added methods setElementTemplate(), setFormTemplate(), setHeaderTemplate() and setRequiredNotTemplate().  They are pretty self-explanatory.
		* Added method addData().  Same as before.
		* Added new method clearAllTemplates() which basically strips out all HTML.  This is useful if you want to create a completely custom looking form using addData()
		* Fixed the toHtml() method so that it is a while statement so that freeze() works.
		* Fixed a bug in the hidden type, where it was setting the value when you created the element, thus not allowing the value to be set by POST or GET variables.
		* Took out the is_int test in select.php.
		* Made the caller a global variable in element.php, so that it can be accessed, if need be, in other element classes.
		* Changed it so that if an element is frozen and has no value it outputs '' instead of nothing which messes up old browsers like NS4.
		* Added renderElement() method which will return the html for one element.
		* Added removeElement() method which removes the element from the elements list. Both methods accept parameters.";s:1:"f";s:5:"24266";s:1:"g";s:42:"http://pear.php.net/get/HTML_QuickForm-2.0";s:1:"x";a:1:{s:7:"attribs";a:1:{s:10:"xlink:href";s:15:"package.2.0.xml";}}}