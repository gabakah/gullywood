a:14:{s:7:"attribs";a:4:{s:5:"xmlns";s:36:"http://pear.php.net/dtd/rest.release";s:9:"xmlns:xsi";s:41:"http://www.w3.org/2001/XMLSchema-instance";s:11:"xmlns:xlink";s:28:"http://www.w3.org/1999/xlink";s:18:"xsi:schemaLocation";s:81:"http://pear.php.net/dtd/rest.release     http://pear.php.net/dtd/rest.release.xsd";}s:1:"p";a:2:{s:7:"attribs";a:1:{s:10:"xlink:href";s:12:"/rest/p/auth";}s:8:"_content";s:4:"Auth";}s:1:"c";s:12:"pear.php.net";s:1:"v";s:5:"1.1.1";s:2:"st";s:6:"stable";s:1:"l";s:11:"PHP License";s:1:"m";s:2:"mj";s:1:"s";s:34:"Creating an authentication system.";s:1:"d";s:261:"The PEAR::Auth package provides methods for creating an authentication
system using PHP.

Currently it supports the following storage containers to read/write
the login data:

* All databases supported by the PEAR database layer
* Plaintext files
* LDAP servers";s:2:"da";s:19:"2002-10-04 20:10:00";s:1:"n";s:1522:"* This release fixes a bug that caused some files of PEAR::Auth to be
  installed in wrong places. Everyone who has installed version 1.1.0
  is urged to update to this version!

Following is a list of changes in version 1.1.0. We are including this
list here because the changelog entries were not displayed properly in
the previous release:

* Silenced some warnings when working with "error_reporting(E_ALL);"
  and fixed two bugs.

* Don't update idletime after the authentification session has expired.

* Allow setting session ID in assignData(). This becomes handy when
  using Auth_HTTP. (Patch by Marko Karppinen, <karppinen@pobox.com>)

* Added optional setLoginCallback() and setLogoutCallback() methods.
  (Patch by Marko Karppinen, <karppinen@pobox.com>)

* Added method setIdle() that complements to setExpire().
  (Patch by Marko Karppinen, <karppinen@pobox.com>)

* Added new methods setAuthData() and getAuthData() that allow to write
  and read additional data into/from the session pool.

* Improved internal handling of session variables.

* Instead of sticking to md5 as the password encryption method, one
  can now choose between standard Unix DES-based encryption algorithm,
  md5 hashing and using plain text passwords. Please note that the
  last option is a security risk and shouldn't be used unless you
  *really* now what you are doing.
  
* Database storage container: Only open connection to SQL server if it
  is really necessary. This speeds up the whole process in a lot of
  situations.";s:1:"f";s:5:"11005";s:1:"g";s:34:"http://pear.php.net/get/Auth-1.1.1";s:1:"x";a:1:{s:7:"attribs";a:1:{s:10:"xlink:href";s:17:"package.1.1.1.xml";}}}